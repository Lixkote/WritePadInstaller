//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WritePadPreviewInstaller {
    using System;
    
    
    /// <summary>
    ///   Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
    /// </summary>
    // Ta klasa została automatycznie wygenerowana za pomocą klasy StronglyTypedResourceBuilder
    // przez narzędzie, takie jak ResGen lub Visual Studio.
    // Aby dodać lub usunąć składową, edytuj plik ResX, a następnie ponownie uruchom narzędzie ResGen
    // z opcją /str lub ponownie utwórz projekt VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class asseth {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal asseth() {
        }
        
        /// <summary>
        /// Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WritePadPreviewInstaller.asseth", typeof(asseth).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
        ///   przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu {\rtf1\ansi\ansicpg1250\deff0\nouicompat\deflang1045{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset238 Calibri;}}
        ///{\colortbl ;\red0\green0\blue255;}
        ///{\*\generator Riched20 10.0.22621}\viewkind4\uc1 
        ///\pard\sa200\sl276\slmult1\b\f0\fs22\lang21 End-User License Agreement (EULA) for FluentPad\b0\par
        ///\par
        ///This End-User License Agreement (EULA) is a legal agreement between you and Lixkote for the use of FluentPad, a software application licensed under the MIT License.\par
        ///\par
        ///By installing, copyi [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string eula {
            get {
                return ResourceManager.GetString("eula", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu ##End-User License Agreement (EULA) for FluentPad
        ///
        ///This End-User License Agreement (EULA) is a legal agreement between you and Lixkote for the use of FluentPad, a software application licensed under the MIT License.
        ///
        ///By installing, copying, or otherwise using FluentPad, you agree to be bound by the terms of this EULA. If you do not agree to the terms of this EULA, do not install or use FluentPad.
        ///
        ///##License
        ///
        ///FluentPad is licensed under the MIT License, a copy of which can be found at https://github. [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string eulatext {
            get {
                return ResourceManager.GetString("eulatext", resourceCulture);
            }
        }
    }
}
